name: Deploy to AWS EC2

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Setup Deno
        uses: denoland/setup-deno@v1
        with:
          deno-version: v2.x

      - name: Verify formatting
        run: deno fmt --check

      - name: Run linter
        run: deno lint

      - name: Run tests
        run: deno test --allow-net

      - name: Type check
        run: deno check src/main.ts

  deploy:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'

    steps:
      - uses: actions/checkout@v4

      - name: Deploy to EC2
        env:
          HOST: ${{ secrets.EC2_HOST }}
          USERNAME: ${{ secrets.EC2_USERNAME }}
          KEY: ${{ secrets.EC2_SSH_KEY }}
          TARGET: ${{ secrets.EC2_TARGET_DIR }}
        run: |
          # Debug: Check if secrets are set
          if [ -z "$HOST" ]; then
            echo "Error: EC2_HOST secret is not set"
            exit 1
          fi
          if [ -z "$USERNAME" ]; then
            echo "Error: EC2_USERNAME secret is not set"
            exit 1
          fi
          if [ -z "$KEY" ]; then
            echo "Error: EC2_SSH_KEY secret is not set"
            exit 1
          fi
          if [ -z "$TARGET" ]; then
            echo "Error: EC2_TARGET_DIR secret is not set"
            exit 1
          fi

          echo "All secrets are configured"

          # Setup SSH
          echo "$KEY" > deploy_key
          chmod 600 deploy_key

          # Create .ssh directory if it doesn't exist
          mkdir -p ~/.ssh

          # Add host to known hosts with error handling
          echo "Adding host to known hosts..."
          ssh-keyscan -H $HOST >> ~/.ssh/known_hosts 2>/dev/null || {
            echo "Warning: Could not add host to known hosts automatically"
            ssh-keyscan -t rsa,ecdsa,ed25519 $HOST >> ~/.ssh/known_hosts 2>/dev/null
          }

          # Test connection first
          echo "Testing SSH connection..."
          ssh -i deploy_key -o StrictHostKeyChecking=no -o ConnectTimeout=10 $USERNAME@$HOST "echo 'SSH connection successful'" || {
            echo "Error: Cannot connect to EC2 instance"
            echo "Please check:"
            echo "1. EC2_HOST is correct"
            echo "2. EC2_USERNAME is correct (should be 'ubuntu' for Ubuntu instances)"
            echo "3. EC2_SSH_KEY contains the correct private key"
            echo "4. Security group allows SSH from GitHub Actions IP"
            exit 1
          }

          # Create deployment directory if it doesn't exist
          echo "Creating deployment directory..."
          ssh -i deploy_key -o StrictHostKeyChecking=no $USERNAME@$HOST "mkdir -p $TARGET"

          # Copy files to server
          echo "Copying files to server..."
          scp -i deploy_key -o StrictHostKeyChecking=no -r ./src ./deno.json ./scripts $USERNAME@$HOST:$TARGET/

          # Run deployment script on server
          echo "Running deployment script..."
          ssh -i deploy_key -o StrictHostKeyChecking=no $USERNAME@$HOST "cd $TARGET && bash scripts/deploy.sh"

          # Cleanup
          rm -f deploy_key
          echo "Deployment completed successfully!"

      - name: Health Check
        run: |
          sleep 10
          curl -f http://${{ secrets.EC2_HOST }}:8000/health || exit 1
          echo "Health check passed!"
